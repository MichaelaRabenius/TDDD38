/*
* Basic language constructs, exercise 3.
*/
#include <iostream>
#include <string>
#include <vector>
using namespace std;

//exercise 4
//using unsigned_char = unsigned char;
//using const_unsigned_char = const unsigned_char;
//using ptr_to_int = int*;
//using ptr_to_ptr_to_char = char**;
//using ptr_to_arr_of_char = char*;
//using arr_of_10_ptr_to_int = ptr_to_int[10];
//using ptr_to_arr_of_10_ptr_to_int = arr_of_10_ptr_to_int*;
//using arr_20_arr_10_of_ptr_to_int = ptr_to_int[20][10];
//


//Exercise 10
//using
//using fun = void (*) (char*, int&);//a function which takes two arguments, one of type pointer to char and one of type reference to int, not returning anything
//using funptr = fun*;//a pointer to such a function
//using funfunptr = void(funptr);//a function which takes such a function pointer as argument
//using ptrfunptr = funptr();//a function which returns such a pointer


int main()
{
	//Statements
	//Exercise 4
	/*char line[]{ "SOMETHING SOMETHING" };
	int length{ sizeof(line) };
	int space_count{ 0 };
	
	for (auto i:line)
		if (i == ' ')
			++space_count;*/

	//Exercise 3
	/*char line[]{ "SOMETHING SOMETHING" };
	int length{ sizeof(line) };
	int space_count{ 0 };

	for (auto p = begin(line); p != end(line); ++p)
	{
		if (*p == ' ')
			++space_count;
	}*/

	//Exercise 2
	/*char line[]{ "SOMETHING SOMETHING" };
	int length{ sizeof(line) };
	int i{ 0 };
	int space_count{ 0 };

	for (char *p = line; p < p + length; ++p)
		if (*p == ' ')
			++space_count;*/

	//Exercise 1
	/*char line[]{"SOMETHING SOMETHING"};	int length{ sizeof(line) };
	int i{ 0 };
	int space_count{ 0 };


	while (i < length) {
		if (line[i] == ' ')
			++space_count;
		++i;
	}*/

	return 0;
}


//unsigned u = 0;

//double d = 0.0;
//d++;

//bool b = false;

////b++;
//
//cout << b;
//Exercise 7
/*char msg[]{ "Hello world!" };

cout << "Size: " << sizeof msg;*/

//Exercise 8
/*char str1[100]{ "String" };
char str2[]{ "String" };
const char* str3{ "String" };
string str4{ "String" };

cout << "Size: " << sizeof(str1) << endl;
cout << "Size: " << sizeof(str2) << endl;
cout << "Size: " << sizeof(str3) << endl;
cout << "Size: " << sizeof(str4) << endl;
*/
//Exercise 3
//string s3[]{ "foo", "fie", "fum" };

//char* char_ptr{ new char('A') }; //a pointer to char
//
//int arr[10] = { }; //an array with 10 int, initialized with 0s 

//int(&a)[10]{ arr }; //a reference to an array with 10 int
//string (*pt)[3]{ &s3 }; //a pointer to an array with 3 elements of type string
//char** char_ptr2{ &char_ptr };
//a pointer to a pointer to char
//const int ci{ 10 }; //a constant int

//const int* pt1{ &ci }; //a pointer to a constant int
//
//int* const cpi{ new int{10} }; //a constant pointer to an int
